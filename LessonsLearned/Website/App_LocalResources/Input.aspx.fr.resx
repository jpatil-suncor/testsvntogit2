<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Additional" xml:space="preserve">
    <value>Renseignements </value>
    <comment>reverserd with background</comment>
  </data>
  <data name="AdditionalBackground" xml:space="preserve">
    <value>Renseignements supplémentaires</value>
    <comment>done</comment>
  </data>
  <data name="additionalstatement" xml:space="preserve">
    <value>caractères restants pour les renseignements supplémentaires</value>
    <comment>done</comment>
  </data>
  <data name="background" xml:space="preserve">
    <value>supplémentaires</value>
    <comment>reverserd with additional</comment>
  </data>
  <data name="BusinessUnit" xml:space="preserve">
    <value>Equipe commerciale</value>
    <comment>done</comment>
  </data>
  <data name="category" xml:space="preserve">
    <value>Catégorie</value>
  </data>
  <data name="fileattachments" xml:space="preserve">
    <value>Fichers joints</value>
    <comment>done</comment>
  </data>
  <data name="FirstName" xml:space="preserve">
    <value>Prénom</value>
    <comment>done</comment>
  </data>
  <data name="frequency" xml:space="preserve">
    <value>Fréquence</value>
    <comment>done</comment>
  </data>
  <data name="helpBackground" xml:space="preserve">
    <value>Les renseignements supplémentaires sont facultatifs; ils servent à donner les détails nécessaires sur la leçon apprise, par ex. de décrire les faits réels ou les faits pertinents concernant un événement dont on a tiré une leçon. Ne donnez pas le nom du fournisseur ou de l'entrepreneur; ne mentionnez la date et l'emplacement que si ces renseignements sont nécessaires à la compréhension. Tenez-vous en aux points essentiels et évitez de submerger le lecteur. Donnez les causes particulières si vous les connaissez tout en évitant de porter un jugement. Par ex. «Le contrat IAC n'indiquait pas de façon claire ce qu'est un espace de bureau. L'entrepreneur IAC a donc établi la facture d'après le nombre de pupitres et de téléphones plutôt que d'après un espace de bureau délimité. La définition claire de «espace de bureau» est importante; elle permet d'assurer que les charges de l'entrepreneur IAC soient comprises dans le contrat de base et d'éviter ainsi une interprétation erronée ou des charges injustifiées. La normalisation et la cohérence de l'application des coûts et de la politique, dans la mesure du possible, sont aussi essentielles car elles permettent de veiller à ce que les coûts facturés à Petro-Canada soient justes et raisonnables. (110 mots)</value>
  </data>
  <data name="helpFileAttachement" xml:space="preserve">
    <value>Ne joignez que les fichiers auxquels le lecteur ne peut accéder directement. La section Références ci-dessus devrait renseigner le lecteur sur la façon d'accéder à des renseignements supplémentaires pertinents. Cliquer sur Parcourir..., sélectionner le fichier à télécharger et cliquer sur Télécharger. Il est impossible de télécharger plus de 2 fichiers.</value>
  </data>
  <data name="helpFrequency" xml:space="preserve">
    <value>Indiquez s'il s'agit d'un événement unique, d'un événement qui s'est produit entre 2 et 4 fois, ou qui est produit assez souvent, c'est-à-dire plus de 5 fois.</value>
  </data>
  <data name="helpImpact" xml:space="preserve">
    <value>Si possible, donnez l'estimation la plus juste de l'impact que l'événement a eu, ou aurait pu avoir, sur les coûts. Pour ce faire, utilisez la grille de 7 niveaux du tableau des risques de la Gestion globale des pertes de Petro-Canada : &gt;100M$, 10M$-100M$, 1M$-10M$, 100K$-1M$, 10K$-100K$, 1K$-10K$, &lt;1K$</value>
  </data>
  <data name="helpPriority" xml:space="preserve">
    <value>Si possible, notez la priorité de l'événement : TE/E/M/F/TF selon 'échelle suivante : TE - possibilité très élevée, agir immédiatement; E - possibilité élevée d'amélioration, agir le plus tôt possible; M - possibilité moyenne d'amélioration, agir au moment de la prochaine mise à niveau ou publication, F - amélioration faible, à jumeler avec d'autres mises à niveaux; ou TF - amélioration très faible, à inclure dans une anlayse générale d'impact sur les coûts.</value>
  </data>
  <data name="helpProcesses" xml:space="preserve">
    <value>Veuillez indiquer les processus, la phase du projet et la catégorie (renseignement facultatif) concernés par cette leçon.</value>
  </data>
  <data name="helpRecommendation" xml:space="preserve">
    <value>provide a reasonable Recommendation to assist the Process Owner in implementing a change or in publishing a formal Lesson Learned.  Point out what needs to be done to either capture, correct or prevent similar situations in the future. Eg. "All Contracts must clearly define "office space" and how their costs will be calculated".</value>
  </data>
  <data name="helpReference" xml:space="preserve">
    <value>Si possible, ajoutez des références spécifiques afin d'aider le lecteur à faire le suivi de l'information. Par ex., no de devis, no de dessin, no de norme, code de référence, etc.</value>
  </data>
  <data name="helpStatement" xml:space="preserve">
    <value>L'énoncé LL (Leçon apprise) doit aussi être court. Normalement, il doit compter entre  50 à 100 mots (maximum de 300 caractères). L'énoncé décrit la leçon apprise et de quelle façon celle-ci peut s'appliquer à des situations similaires. Il doit fournir au lecteur l'information clé lui permettant de voir si la leçon est pertinente à sa recherche. Les acronymes et les termes génériques doivent être clairs pour le lecteur. Par ex. «Les contrats IAC doivent indiquer clairement qu'un bureau est un espace de 8 pi x 10 pi (ou toute autre mesure spécifique) entouré de 4 murs et avec un pupitre et une ligne téléphonique. Même s'il y a 2 personnes dans un bureau, l'endroit est défini comme un bureau.» (43mots/231caractères).</value>
  </data>
  <data name="helpTitle" xml:space="preserve">
    <value>Utilisez comme titre une courte description, de préférence de moins de 10 mots (maximum de 100 caractères). Le titre doit être le plus précis possible. Pour attirer l'attention du lecteur, annoncez et mettez en évidence l'objet pincipal au moyen de mots-clés. Par ex. «Définition d'un espace de bureau - l'importance d'utiliser des termes clairs». (10 mots /76 caractères).</value>
    <comment>dione</comment>
  </data>
  <data name="helpType" xml:space="preserve">
    <value>Parmi les points principaux suivants, indiquez sur lesquels l'événement a eu une incidence  - 1. Sécurité 2. Meilleur marché, mieux, plus rapide. 3. Autre...</value>
  </data>
  <data name="impact" xml:space="preserve">
    <value>Impact</value>
    <comment>done</comment>
  </data>
  <data name="LastName" xml:space="preserve">
    <value>Nom de famille</value>
    <comment>done</comment>
  </data>
  <data name="LessonTitle" xml:space="preserve">
    <value>Titre de la leçon</value>
    <comment>done</comment>
  </data>
  <data name="Location" xml:space="preserve">
    <value>Emplacement</value>
    <comment>done</comment>
  </data>
  <data name="mandatorystatement" xml:space="preserve">
    <value>Les champs &lt;b&gt;en gras&lt;/b&gt; sont obligatoires. Pour afficher de l'information utile sur l'élément, glissez la souris sur les </value>
    <comment>done</comment>
  </data>
  <data name="other" xml:space="preserve">
    <value>autre</value>
    <comment>done</comment>
  </data>
  <data name="PhoneNumber" xml:space="preserve">
    <value>Téléphone</value>
    <comment>done</comment>
  </data>
  <data name="priority" xml:space="preserve">
    <value>Priorité</value>
    <comment>done</comment>
  </data>
  <data name="processAffected" xml:space="preserve">
    <value>Processus concerné</value>
  </data>
  <data name="ProjectName" xml:space="preserve">
    <value>Nom du projet</value>
    <comment>done</comment>
  </data>
  <data name="projectPhase" xml:space="preserve">
    <value>Phase du projet</value>
  </data>
  <data name="recommendations" xml:space="preserve">
    <value>Recommandations</value>
    <comment>done</comment>
  </data>
  <data name="recommendationsstatement" xml:space="preserve">
    <value>caractères restants pour les recommandations</value>
    <comment>done</comment>
  </data>
  <data name="reference" xml:space="preserve">
    <value>Références</value>
    <comment>done</comment>
  </data>
  <data name="referencesstatement" xml:space="preserve">
    <value>caractères restants pour les références</value>
    <comment>done</comment>
  </data>
  <data name="SBU" xml:space="preserve">
    <value>UCS</value>
    <comment>done</comment>
  </data>
  <data name="Statement" xml:space="preserve">
    <value>Énoncé</value>
    <comment>done</comment>
  </data>
  <data name="statementcharacters" xml:space="preserve">
    <value>caractères restants pour l'énoncé</value>
    <comment>done</comment>
  </data>
  <data name="titlecharacters" xml:space="preserve">
    <value>caractères restants pour le titre</value>
    <comment>done</comment>
  </data>
  <data name="type" xml:space="preserve">
    <value>Type</value>
  </data>
</root>